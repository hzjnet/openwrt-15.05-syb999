--- a/mt7615/dma.c
+++ b/mt7615/dma.c
@@ -90,31 +90,22 @@
 	}
 }
 
-static int mt7615_poll_tx(struct napi_struct *napi, int budget)
+static void mt7615_tx_tasklet(unsigned long data)
 {
+	struct mt7615_dev *dev = (struct mt7615_dev *)data;
+
 	static const u8 queue_map[] = {
 		MT_TXQ_MCU,
 		MT_TXQ_BE
 	};
-	struct mt7615_dev *dev;
 	int i;
 
-	dev = container_of(napi, struct mt7615_dev, mt76.tx_napi);
-
-	for (i = 0; i < ARRAY_SIZE(queue_map); i++)
-		mt76_queue_tx_cleanup(dev, queue_map[i], false);
-
-	if (napi_complete_done(napi, 0))
-		mt7615_irq_enable(dev, MT_INT_TX_DONE_ALL);
-
 	for (i = 0; i < ARRAY_SIZE(queue_map); i++)
 		mt76_queue_tx_cleanup(dev, queue_map[i], false);
 
-	mt7615_mac_sta_poll(dev);
+	mt76_txq_schedule_all(&dev->mphy);
 
-	tasklet_schedule(&dev->mt76.tx_tasklet);
-
-	return 0;
+	mt7615_irq_enable(dev, MT_INT_TX_DONE_ALL);
 }
 
 int mt7615_dma_init(struct mt7615_dev *dev)
@@ -123,6 +114,9 @@
 
 	mt76_dma_attach(&dev->mt76);
 
+	tasklet_init(&dev->mt76.tx_tasklet, mt7615_tx_tasklet,
+		     (unsigned long)dev);
+
 	mt76_wr(dev, MT_WPDMA_GLO_CFG,
 		MT_WPDMA_GLO_CFG_TX_WRITEBACK_DONE |
 		MT_WPDMA_GLO_CFG_FIFO_LITTLE_ENDIAN |
@@ -185,10 +179,6 @@
 	if (ret < 0)
 		return ret;
 
-	netif_tx_napi_add(&dev->mt76.napi_dev, &dev->mt76.tx_napi,
-			  mt7615_poll_tx, NAPI_POLL_WEIGHT);
-	napi_enable(&dev->mt76.tx_napi);
-
 	mt76_poll(dev, MT_WPDMA_GLO_CFG,
 		  MT_WPDMA_GLO_CFG_TX_DMA_BUSY |
 		  MT_WPDMA_GLO_CFG_RX_DMA_BUSY, 0, 1000);
--- a/mt7615/pci.c
+++ b/mt7615/pci.c
@@ -50,7 +50,7 @@
 
 	if (intr & MT_INT_TX_DONE_ALL) {
 		mt7615_irq_disable(dev, MT_INT_TX_DONE_ALL);
-		napi_schedule(&dev->mt76.tx_napi);
+		tasklet_schedule(&dev->mt76.tx_tasklet);
 	}
 
 	if (intr & MT_INT_RX_DONE(0)) {
